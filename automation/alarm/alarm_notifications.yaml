

# Notify when brand alarm
- alias: Send notification when alarm triggered
  trigger:
  - platform: state
    entity_id: binary_sensor.smokedetector_woonkamer
    to: 'on'

  action:
  - service: notify.ALL_CONTACTS
    data:
      message: Brand ALARM! Rook gedetecteerd!!!!
      data:
         push:
            sound:
               name: default
               critical: 1
               volume: 1.0

# Notify when alarm triggerd
- alias: Send notification when alarm triggered
  trigger:
  - platform: state
    entity_id: alarm_control_panel.ha_alarm
    to: triggered
  action:

  - service: telegram_bot.send_message
    data_template:
      inline_keyboard:
      - Disarm:/button_alarm_uitschakelen
      message: ALARM! The alarm has been triggered
      target: 243259223
      title: '*ALARM!!!*'

  - service: notify.ALL_CONTACTS
    data:
      message: ALARM! The alarm has been triggered
      data:
         push:
            sound:
               name: default
               critical: 1
               volume: 0.7
               

- alias: Disarm alarm na bevestiging via Telegram
  initial_state: 'on'

  trigger:
  - event_data:
      data: /button_alarm_uitschakelen
    event_type: telegram_callback
    platform: event

  action:
  - service: notify.telegram_eddie
    data:
      message: Alarm wordt uitgeschakeld.
      title: '*DISARM*'

  - service: alarm_control_panel.alarm_disarm
    entity_id: alarm_control_panel.ha_alarm


# Notify on door open
- alias: Stuur notificatie als deur geopend wordt en alarm aan staat.
  trigger:
  - platform: state
    entity_id: binary_sensor.achterdeur
    to: 'on'
    
  condition:
     condition: or
     conditions:
        - condition: state
          entity_id: alarm_control_panel.ha_alarm
          state: armed_home
        - condition: state
          entity_id: alarm_control_panel.ha_alarm
          state: armed_away                
    
  action:
  - service: notify.mobile_app_reyhzhao
    data:
      message: ALARM! Achterdeur geopend.
      data:
         push:
            sound:
               name: US-EN-Morgan-Freeman-Back-Door-Opened.wav

# Notify door close
- alias: Stuur notificatie als deur gesloten wordt en alarm aan staat.
  trigger:
  - platform: state
    entity_id: binary_sensor.achterdeur
    to: 'off'
    
  condition:
     condition: or
     conditions:
        - condition: state
          entity_id: alarm_control_panel.ha_alarm
          state: armed_home
        - condition: state
          entity_id: alarm_control_panel.ha_alarm
          state: armed_away     
    
  action:
  - service: notify.mobile_app_reyhzhao
    data:
      message: ALARM! Achterdeur gesloten.
      data:
         push:
            sound:
               name: US-EN-Morgan-Freeman-Back-Door-Closed.wav


# Send notification when alarm is Armed in Home mode
- alias: Send notification when alarm is Armed in Home mode
  trigger:
  - platform: state
    entity_id: alarm_control_panel.ha_alarm
    to: armed_home
  action:
  - service: notify.mobile_app_reyhzhao
    data_template:
      message: "ALARM! The alarm is armed in Home mode {{ states('sensor.date_time') }} \n"
      data:
         push:
            sound:
               name: default
               

# Send notification when alarm is Armed in Away mode
- alias: Send notification when alarm is Armed in Away mode
  trigger:
  - platform: state
    entity_id: alarm_control_panel.ha_alarm
    to: armed_away
  action:
  - service: notify.ALL_CONTACTS
    data_template:
      # Alarm ingeschakeld in away mode om: {{ now().strftime('%H:%M %A %d %B %Y') }}
      message: >-
        Alarm ingeschakeld in away mode om {{ now().strftime('%H:%M') }}

        Open ramen of deuren:

        {%- for entity in states.group.ramen.attributes.entity_id -%}
          {%- if states[entity.split('.')[0]][entity.split('.')[1]].state == 'on' %}
            {{ states[entity.split('.')[0]][entity.split('.')[1]].attributes.friendly_name }}
          {%- endif %}
        {%- endfor -%}

        {%- for entity in states.group.deuren.attributes.entity_id -%}
          {%- if states[entity.split('.')[0]][entity.split('.')[1]].state == 'on' %}
            {{ states[entity.split('.')[0]][entity.split('.')[1]].attributes.friendly_name }}
          {%- endif %}
        {%- endfor -%}

      data:
         push:
            sound:
               name: default


# Send notification when alarm is Disarmed
- alias: 'Send notification when alarm is Disarmed'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.ha_alarm
      to: 'disarmed'

  action:
     service: notify.mobile_app_reyhzhao
     data:
        message: "Alarm uitgeschakeld om: {{ now().strftime('%H:%M') }}"
        data:
           push:
              sound:
                 name: default


